[[[ 2014-02-20 |上一週]]] || [[[ 2014-03-06 |下一週]]]

[[toc]]


+ tsaikd
tsaikd/docker - Build docker image system with shell scripts  
http://github.com/tsaikd/docker

[[code]]
$ docker save
$ docker load
[[/code]]

# vi /etc/default/docker
[code]
DOCKER_OPTS="**-g** /var/lib/docker"
[/code]


chjj/term.js - A terminal written in javascript.    
https://github.com/chjj/term.js/

phpVirtualBox - A web-based front-end to VirtualBox written in PHP     
http://sourceforge.net/projects/phpvirtualbox/


+ WillyTu
facebook tw.wiki

Wiki communities for everyone! -- Wikia.com
http://www.wikia.com/Wikia

Mural.ly - Visual Collaboration for Creative People
https://mural.ly/#/murals
+ willy                                                                                                             

[[code]]
$ docker run tianon/debian uname -a

$ docker run -i -t tianon/debian /bin/bash
-i interactive
-t like a terminal
$ docker ps -a

$ docker commit <container-id> <name>
[[/code]]

[[code]]
$ docker run mypip pip install bottle

$ docker commit <container-id> mybottle

$ docker run -p 9999:8080 myweb python bottle-sample/app.py

$ docker kill <container-id>
[[/code]]

[[code]]
# Dockerfile
FROM ubuntu

RUN apt-get update
RUN apt-get insatll -y git-core

RUN git clone xxxx

CMD python bottle-sample/app.py
[[/code]]


Dockerfile tutorial
https://www.docker.io/learn/dockerfile/level1/


auto build Docker images from Github
https://index.docker.io/

progrium/dokku - Docker powered mini-Heroku in around 100 lines of Bash
https://github.com/progrium/dokku

Flynn - The product that ops provides to developers
https://flynn.io/


Continuous Integration · drone.io
https://drone.io/
Strider CD - Strider Brilliant Continuous Deployment
http://stridercd.com/


+ philipz

coreos cluster
coreos/etcd - A highly-available key value store for shared configuration and service discovery
https://github.com/coreos/etcd
coreos/fleet - A Distributed init System
https://github.com/coreos/fleet

Slimming down Docker containers | Intercity Blog
http://blog.intercityup.com/downsizing-docker-containers/                                                                                                                    

Docker Registry or How to Run your own Private Docker Image Repository | codecentric Blogcodecentric Blog
https://blog.codecentric.de/en/2014/02/docker-registry-run-private-docker-image-repository/

Link via an Ambassador Container - Docker Documentation
http://docs.docker.io/en/latest/use/ambassador_pattern_linking/

Resin.io Presentation Slides from LNUG - Resin.io allows you to 'git push' to your hardware devices. We cross-compile your code in the cloud, turn it to a Docker container, and ship it!
http://resin.io/blog/resin-io-presentation-slides-from-lnug/


+ Carl

Using data volumes is as simple as adding a -v parameter 
$ docker run **-v** /var/volume1 **-v** /var/volume2 busybox true

Share Directories via Volumes - Docker Documentation
http://docs.docker.io/en/latest/use/working_with_volumes/


Return low-level information on a container/image

[[code]]
$ docker inspect CONTAINER|IMAGE [CONTAINER|IMAGE...]

$ docker inspect --format='{{.NetworkSettings.IPAddress}}' $INSTANCE_ID
[[/code]]

+ yan

First steps with Docker - Docker Documentation
http://docs.docker.io/en/latest/use/basics/

[[code]]
$ sudo docker run -i -t ubuntu /bin/bash
// To detach the tty without exiting the shell, use the escape sequence **Ctrl-p + Ctrl-q**
$ sudo docker.io attach <container-id>
[[/code]]

C:\Python27\Lib\site-packages\sitecustomize.py

[[code]]
import sys
sys.setdefaultencoding('big5')
[[/code]]

Kali LInux Metapackages | Kali Linux
http://www.kali.org/news/kali-linux-metapackages/

**Backtrack**

[[code]]
# Debian / Ubuntu
deb http://all.repository.backtrack-linux.org revolution main microverse non-free testing
deb http://32.repository.backtrack-linux.org revolution main microverse non-free testing
deb http://64.repository.backtrack-linux.org revolution main microverse non-free testing
deb http://source.repository.backtrack-linux.org revolution main microverse non-free testing
[[/code]]

**Kali**

[[code]]
# Debian
# source
deb [arch=i386,amd64,armel,armhf] http://http.kali.org/kali kali-dev main contrib non-free
deb [arch=i386,amd64,armel,armhf] http://http.kali.org/kali kali-dev main/debian-installer
deb-src http://http.kali.org/kali kali-dev main contrib non-free
# binary
deb [arch=i386,amd64,armel,armhf] http://http.kali.org/kali kali main contrib non-free
deb [arch=i386,amd64,armel,armhf] http://http.kali.org/kali kali main/debian-installer
deb-src http://http.kali.org/kali kali main contrib non-free
# stablerelease
deb [arch=i386,amd64,armel,armhf] http://security.kali.org/kali-security kali/updates main contrib non-free
deb-src http://security.kali.org/kali-security kali/updates main contrib non-free
# nextrelease
deb [arch=i386,amd64,armel,armhf] http://repo.kali.org/kali kali-bleeding-edge main
deb-src http://repo.kali.org/kali kali-bleeding-edge main
[[/code]]



[[code]]
for i in range(1, 5): 
    print globals()['somevar_%s' % i]
[[/code]]



[[code]]
>>> class foo():
...    bar = 1
... 
>>> foo.bar
1
>>> foo.__dict__['bar']
1
[[/code]]

[[code]]
# nmap -sP 192.168.1.1-254

# nmap -sT 192.168.1.1-254 -p 22
[[/code]]